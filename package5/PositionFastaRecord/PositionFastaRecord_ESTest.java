/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 05:20:51 GMT 2024
 */

package org.jcvi.jillion.fasta.pos;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.jcvi.jillion.core.pos.PositionSequence;
import org.jcvi.jillion.fasta.pos.PositionFastaRecord;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PositionFastaRecord_ESTest extends PositionFastaRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PositionSequence positionSequence0 = mock(PositionSequence.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(positionSequence0).toString();
      PositionFastaRecord positionFastaRecord0 = new PositionFastaRecord("", positionSequence0);
      PositionSequence positionSequence1 = mock(PositionSequence.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(positionSequence1).toString();
      PositionFastaRecord positionFastaRecord1 = new PositionFastaRecord("", "", positionSequence1);
      boolean boolean0 = positionFastaRecord0.equals(positionFastaRecord1);
      assertFalse(boolean0);
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 01:27:43 GMT 2024
 */

package com.liferay.portal.lar;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.kernel.xml.Element;
import com.liferay.portal.kernel.zip.ZipReader;
import com.liferay.portal.kernel.zip.ZipWriter;
import com.liferay.portal.lar.CurrentUserIdStrategy;
import com.liferay.portal.lar.PortletDataContextImpl;
import com.liferay.portal.lar.PortletImporter;
import com.liferay.portal.model.Layout;
import com.liferay.portal.model.Organization;
import com.liferay.portal.model.OrganizationWrapper;
import com.liferay.portal.model.User;
import com.liferay.portal.model.impl.PortletAppImpl;
import com.liferay.portal.xml.ElementImpl;
import com.liferay.portal.zip.ZipReaderImpl;
import com.liferay.portlet.PortalPreferencesImpl;
import com.liferay.portlet.PortalPreferencesWrapper;
import com.liferay.portlet.PortletPreferencesImpl;
import com.liferay.portlet.RenderResponseImpl;
import com.liferay.portlet.asset.model.AssetCategory;
import com.liferay.portlet.asset.model.AssetCategoryWrapper;
import com.liferay.portlet.asset.model.AssetTag;
import com.liferay.portlet.asset.model.AssetVocabulary;
import com.liferay.portlet.asset.model.AssetVocabularyWrapper;
import com.liferay.portlet.journal.model.JournalStructureWrapper;
import java.io.File;
import java.util.Date;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;
import javax.portlet.PortletPreferences;
import org.apache.derby.iapi.sql.depend.ProviderList;
import org.dom4j.QName;
import org.dom4j.bean.BeanElement;
import org.dom4j.tree.DefaultElement;
import org.dom4j.util.NonLazyElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.hibernate.collection.PersistentMap;
import org.hibernate.collection.PersistentSortedMap;
import org.hibernate.engine.SessionImplementor;
import org.hibernate.impl.CriteriaImpl;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PortletImporter_ESTest extends PortletImporter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PortletImporter portletImporter0 = new PortletImporter();
      HashMap<String, String[]> hashMap0 = new HashMap<String, String[]>();
      Organization organization0 = mock(Organization.class, new ViolatedAssumptionAnswer());
      doReturn((Set) null).when(organization0).getReminderQueryQuestions(any(java.util.Locale.class));
      OrganizationWrapper organizationWrapper0 = new OrganizationWrapper(organization0);
      Locale locale0 = Locale.PRC;
      Set<String> set0 = organizationWrapper0.getReminderQueryQuestions(locale0);
      PortletDataContextImpl portletDataContextImpl0 = new PortletDataContextImpl((-308L), (-2013L), hashMap0, set0, (Date) null, (Date) null, (ZipWriter) null);
      try { 
        portletImporter0.updatePortletPreferences(portletDataContextImpl0, (-1118L), 241, (-747L), "#**P", (String) null, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // BeanLocator has not been set
         //
         verifyException("com.liferay.portal.kernel.bean.PortalBeanLocatorUtil", e);
      }
  } 
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 00:54:35 GMT 2024
 */

package weka.core.tokenizers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.tokenizers.AlphabeticTokenizer;
import weka.core.tokenizers.Tokenizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AlphabeticTokenizer_ESTest extends AlphabeticTokenizer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AlphabeticTokenizer alphabeticTokenizer0 = new AlphabeticTokenizer();
      char[] charArray0 = new char[9];
      alphabeticTokenizer0.m_Str = charArray0;
      char[] charArray1 = new char[4];
      charArray1[3] = 'G';
      alphabeticTokenizer0.m_Str = charArray1;
      boolean boolean0 = alphabeticTokenizer0.hasMoreElements();
      assertTrue(boolean0);
      
      Object object0 = alphabeticTokenizer0.nextElement();
      assertEquals("G", object0);
  }
}

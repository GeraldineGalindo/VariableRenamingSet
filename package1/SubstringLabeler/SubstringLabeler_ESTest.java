/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 00:59:20 GMT 2024
 */

package weka.gui.beans;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.beans.EventSetDescriptor;
import java.lang.reflect.Method;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import weka.core.BinarySparseInstance;
import weka.core.Environment;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.converters.TextDirectoryLoader;
import weka.gui.beans.Appender;
import weka.gui.beans.BeanVisual;
import weka.gui.beans.DataSetEvent;
import weka.gui.beans.Filter;
import weka.gui.beans.FlowByExpression;
import weka.gui.beans.InstanceEvent;
import weka.gui.beans.PredictionAppender;
import weka.gui.beans.Sorter;
import weka.gui.beans.SubstringLabeler;
import weka.gui.beans.SubstringReplacer;
import weka.gui.beans.TestSetEvent;
import weka.gui.beans.TrainTestSplitMaker;
import weka.gui.beans.TrainingSetEvent;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubstringLabeler_ESTest extends SubstringLabeler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TextDirectoryLoader textDirectoryLoader0 = new TextDirectoryLoader();
      Instances instances0 = textDirectoryLoader0.getStructure();
      Environment environment0 = Environment.getSystemWide();
      SubstringLabeler.Match substringLabeler_Match0 = new SubstringLabeler.Match(".arff", true, true, ".bsi");
      substringLabeler_Match0.init(environment0, instances0);
      String string0 = substringLabeler_Match0.apply("\tThe number of epochs to perform (batch learning only, default = 500)");
      assertNull(string0);
      assertEquals(".bsi", substringLabeler_Match0.getAttsToApplyTo());
      assertTrue(substringLabeler_Match0.getRegex());
      assertTrue(substringLabeler_Match0.getIgnoreCase());
      assertEquals(".arff", substringLabeler_Match0.getMatch());
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 04:55:22 GMT 2024
 */

package com.lts.util.scheduler;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.lts.util.DefaultSharedQueue;
import com.lts.util.SharedQueue;
import com.lts.util.scheduler.NewScheduler;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class NewScheduler_ESTest extends NewScheduler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NewScheduler.startSystem();
      NewScheduler newScheduler0 = NewScheduler.getInstance();
      assertEquals(2000L, NewScheduler.CYCLE_TIME);
      
      long long0 = newScheduler0.getNextSleepTime();
      assertEquals(2000L, long0);
      
      DefaultSharedQueue defaultSharedQueue0 = new DefaultSharedQueue();
      Object object0 = new Object();
      NewScheduler.ScheduledEvent newScheduler_ScheduledEvent0 = new NewScheduler.ScheduledEvent((-1392409279320L), defaultSharedQueue0, object0);
      NewScheduler.ScheduledEvent newScheduler_ScheduledEvent1 = new NewScheduler.ScheduledEvent(651L, defaultSharedQueue0, newScheduler_ScheduledEvent0);
      int int0 = newScheduler_ScheduledEvent1.compareTo(newScheduler_ScheduledEvent0);
      assertEquals(1, int0);
  }
}

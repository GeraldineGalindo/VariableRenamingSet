/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 01:52:51 GMT 2024
 */

package com.liferay.portlet.calendar.model.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.model.PortletItem;
import com.liferay.portal.model.PortletItemWrapper;
import com.liferay.portal.model.Website;
import com.liferay.portal.model.WebsiteWrapper;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portlet.calendar.model.CalEvent;
import com.liferay.portlet.calendar.model.CalEventSoap;
import com.liferay.portlet.calendar.model.CalEventWrapper;
import com.liferay.portlet.calendar.model.impl.CalEventImpl;
import com.liferay.portlet.calendar.model.impl.CalEventModelImpl;
import java.io.Serializable;
import java.lang.reflect.Proxy;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.function.UnaryOperator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.firebirdsql.gds.XSQLVAR;
import org.hibernate.collection.PersistentMap;
import org.jfree.data.time.FixedMillisecond;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CalEventModelImpl_ESTest extends CalEventModelImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CalEventSoap calEventSoap0 = new CalEventSoap();
      CalEvent calEvent0 = CalEventModelImpl.toModel(calEventSoap0);
      CalEventWrapper calEventWrapper0 = new CalEventWrapper(calEvent0);
      CalEventSoap calEventSoap1 = CalEventSoap.toSoapModel(calEventWrapper0);
      CalEventImpl calEventImpl0 = (CalEventImpl)CalEventModelImpl.toModel(calEventSoap1);
      CalEventSoap calEventSoap2 = CalEventSoap.toSoapModel(calEventImpl0);
      assertEquals(0, calEventSoap2.getFirstReminder());
      assertEquals(0, calEventSoap2.getDurationMinute());
      assertEquals((-1L), calEventImpl0.getColumnBitmask());
      assertEquals(0, calEventSoap2.getSecondReminder());
      assertEquals("", calEventSoap2.getUuid());
      assertEquals(0L, calEventSoap2.getUserId());
      assertEquals(0L, calEventSoap2.getPrimaryKey());
      assertEquals("", calEventSoap2.getUserName());
      assertFalse(calEventSoap2.isRepeating());
      assertEquals("", calEventSoap2.getType());
      assertEquals(0L, calEventSoap2.getCompanyId());
      assertEquals("", calEventSoap2.getRecurrence());
      assertEquals("", calEventSoap2.getLocation());
      assertEquals("", calEventSoap2.getDescription());
      assertEquals(0L, calEventSoap2.getGroupId());
      assertEquals(0L, calEventImpl0.getOriginalGroupId());
      assertFalse(calEventSoap1.getTimeZoneSensitive());
      assertFalse(calEventSoap2.isAllDay());
      assertFalse(calEventImpl0.getOriginalRepeating());
  }
}

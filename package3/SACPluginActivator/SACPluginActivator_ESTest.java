/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 03:53:55 GMT 2024
 */

package fi.vtt.noen.mfw.bundle.server.plugins.sac;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.SACPlugin;
import fi.vtt.noen.mfw.bundle.server.plugins.sac.SACPluginActivator;
import java.util.Properties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceRegistration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SACPluginActivator_ESTest extends SACPluginActivator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      SACPluginActivator sACPluginActivator0 = new SACPluginActivator(properties0);
      BundleContext bundleContext0 = mock(BundleContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null).when(bundleContext0).getServiceReferences(anyString() , anyString());
      doReturn((ServiceRegistration) null).when(bundleContext0).registerService(any(java.lang.String[].class) , any() , any(java.util.Dictionary.class));
      try { 
        sACPluginActivator0.start(bundleContext0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable: Unexpected exception parsing XML document from class path resource [META-INF/cxf/cxf-extension-soap.xml]
         //
         verifyException("org.apache.cxf.bus.spring.SpringBusFactory", e);
      }
  }
}

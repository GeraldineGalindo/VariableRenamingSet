/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 04:59:18 GMT 2024
 */

package wheel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.ZoneId;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Map;
import java.util.Set;
import javax.servlet.ServletContext;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletRequestWrapper;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpServletResponseWrapper;
import javax.servlet.http.HttpSession;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.junit.runner.RunWith;
import wheel.EngineImpl;
import wheel.ErrorPage;
import wheel.IMessagesSource;
import wheel.MultipartEngineImpl;
import wheel.components.Form;
import wheel.persistence.IObjectStore;
import wheel.util.WheelURL;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EngineImpl_ESTest extends EngineImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Locale locale0 = Locale.KOREA;
      Enumeration<Form> enumeration0 = (Enumeration<Form>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      HttpSession httpSession0 = mock(HttpSession.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, "/").when(httpSession0).getAttribute(anyString());
      doReturn(enumeration0).when(httpSession0).getAttributeNames();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HttpServletRequest httpServletRequest0 = mock(HttpServletRequest.class, new ViolatedAssumptionAnswer());
      doReturn(locale0).when(httpServletRequest0).getLocale();
      doReturn(hashMap0).when(httpServletRequest0).getParameterMap();
      doReturn("+s").when(httpServletRequest0).getPathInfo();
      doReturn(httpSession0).when(httpServletRequest0).getSession(anyBoolean());
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      HttpServletResponseWrapper httpServletResponseWrapper0 = new HttpServletResponseWrapper(httpServletResponse0);
      ServletContext servletContext0 = mock(ServletContext.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null, (Object) null, (Object) null, (Object) null, (Object) null).when(servletContext0).getAttribute(anyString());
      EngineImpl engineImpl0 = new EngineImpl(httpServletRequest0, httpServletResponseWrapper0, servletContext0);
      IObjectStore iObjectStore0 = engineImpl0.getObjectStore();
      assertNotNull(iObjectStore0);
      assertFalse(engineImpl0.isAjaxRequest());
      
      engineImpl0.processRequestInternal();
      assertEquals("UTF-8", engineImpl0.getEncoding());
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Apr 02 01:35:59 GMT 2024
 */

package com.liferay.portal.module.framework;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.liferay.portal.module.framework.LogBridge;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.osgi.framework.BundleContext;
import org.osgi.framework.ServiceReference;
import org.osgi.service.log.LogEntry;
import org.osgi.service.log.LogReaderService;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LogBridge_ESTest extends LogBridge_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LogBridge logBridge0 = new LogBridge();
      ServiceReference<LogReaderService> serviceReference0 = (ServiceReference<LogReaderService>) mock(ServiceReference.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        logBridge0.addingService(serviceReference0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.liferay.portal.module.framework.LogBridge", e);
      }
  }
}

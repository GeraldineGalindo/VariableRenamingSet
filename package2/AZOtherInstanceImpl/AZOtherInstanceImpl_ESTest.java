/*
 * This file was automatically generated by EvoSuite
 * Mon Apr 01 23:21:55 GMT 2024
 */

package com.aelitis.azureus.core.instancemanager.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.aelitis.azureus.core.instancemanager.impl.AZOtherInstanceImpl;
import java.net.InetAddress;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.gudy.azureus2.core3.util.SystemTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AZOtherInstanceImpl_ESTest extends AZOtherInstanceImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      InetAddress inetAddress1 = MockInetAddress.anyLocalAddress();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      AZOtherInstanceImpl aZOtherInstanceImpl0 = new AZOtherInstanceImpl("^n<_M&", "^n<_M&", inetAddress0, inetAddress1, (-704), 65, 65, hashMap0);
      InetAddress inetAddress2 = aZOtherInstanceImpl0.getExternalAddress();
      assertEquals(65, aZOtherInstanceImpl0.getUDPListenPort());
      assertEquals((-704), aZOtherInstanceImpl0.getTCPListenPort());
      assertFalse(inetAddress2.isLoopbackAddress());
      assertEquals(65, aZOtherInstanceImpl0.getUDPNonDataListenPort());
  }
}
